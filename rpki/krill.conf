
# Global configuration
verbose = true
port=3000
ip = "0.0.0.0"
https_mode = "existing"
# https_mode = "disable"
log_file = "/var/krill/logs/krill.log"
data_dir = "/var/krill/data"
log_type = "file"
log_level = "debug"
admin_token ="krill"
# Configure the ROA repository
[roa_repository]
# # Use the file system backend
backend = "fs"
# # Use a local directory for the repository
directory = "/var/krill/data/roa"
# [rtr]
# enable = true
# [rtr.server]
# port = 8282
# path = "/var/lib/krill/repo"
# tcp_nodelay = true

[testbed]
# 
# service_uri = "http://savopkrill/"
# RRDP BASE URI
#
# Set the base RRDP uri for the testbed repository server.
#
# It is highly recommended to use a proxy in front of Krill.
#
# To expose the RRDP files you can actually proxy back to your testbed
# krill server (https://<yourkrill>/rrdp/), or you can expose the
# files as they are written to disk ($data_dir/repo/rrdp/)
#
# Set the following value to *your* public proxy hostname and path.
rrdp_base_uri = "https://savopkrill.com:3000/rrdp/"

# RSYNC BASE URI
#
# Set the base rsync URI (jail) for the testbed repository server.
#
# Make sure that you have an rsyncd running and a module which is
# configured to expose the rsync repository files. By default these
# files would be saved to: $data/repo/rsync/current/
rsync_jail = "rsync://savopkrill.com/repo/"

# TA AIA
#
# Set the rsync location for your testbed trust anchor certificate.
#
# You need to configure an rsync server to expose another module for the
# TA certificate. Don't use the module for the repository as its
# content will be overwritten.
#
# Manually retrieve the TA certificate from krill and copy it
# over - it won't change again. You can get it at:
# https://<yourkrill>/ta/ta.cer
ta_aia = "rsync://savopkrill.com/repo/ta.cer"

# TA URI
#
# Like above, make the TA certificate available over HTTPS and
# specify the url here so that it may be included in the TAL.
ta_uri = "https://savopkrill.com:3000/ta/ta.cer"